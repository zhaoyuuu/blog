import{_ as e,c as t,o as a,d as i}from"./app.89833151.js";const f=JSON.parse('{"title":"handwritten 手写","description":"","frontmatter":{},"headers":[{"level":3,"title":"准备 JS 面试：","slug":"准备-js-面试","link":"#准备-js-面试","children":[]},{"level":3,"title":"建议优先掌握：","slug":"建议优先掌握","link":"#建议优先掌握","children":[]}],"relativePath":"handwritten/intro.md","lastUpdated":1677148163000}'),n={name:"handwritten/intro.md"},d=i('<h1 id="handwritten-手写" tabindex="-1">handwritten 手写 <a class="header-anchor" href="#handwritten-手写" aria-hidden="true">#</a></h1><h3 id="准备-js-面试" tabindex="-1">准备 JS 面试： <a class="header-anchor" href="#准备-js-面试" aria-hidden="true">#</a></h3><p>✔︎ 应试式死记硬背，过程比较痛苦，而且效果并不好 😰<br> ❌ 把那些常考的 知识点/函数 动手实现一遍，哪怕是简易版本，也比死记硬背来得轻松、更加事半功倍 😎<br></p><h3 id="建议优先掌握" tabindex="-1">建议优先掌握： <a class="header-anchor" href="#建议优先掌握" aria-hidden="true">#</a></h3><ul><li><code>instanceof</code> - 考察对原型链的理解</li><li><code>new</code> - 对创建对象实例过程的理解</li><li><code>call/apply/bind</code> - 对 this 指向的理解</li><li>手写 <code>promise</code> - 对异步的理解</li><li>手写原生 <code>ajax</code> - 对 ajax 原理和 http 请求方式的理解，重点是 get 和 post 请求的实现</li></ul>',5),r=[d];function o(c,l,s,h,_,p){return a(),t("div",null,r)}const m=e(n,[["render",o]]);export{f as __pageData,m as default};
